{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-slideshow-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  onImagesSubmit\n}) {\n  _s();\n  const [imageCount, setImageCount] = useState(0);\n  const [images, setImages] = useState([]);\n  const handleImageCountChange = e => {\n    const count = parseInt(e.target.value);\n    setImageCount(count);\n\n    // Initialize the images array with empty values\n    const newImages = Array.from({\n      length: count\n    }, (_, index) => ({\n      url: '',\n      title: `Image ${index + 1}`,\n      description: ''\n    }));\n    setImages(newImages);\n  };\n  const handleImageChange = (index, value, field) => {\n    const updatedImages = [...images];\n    updatedImages[index][field] = value;\n    setImages(updatedImages);\n  };\n  const handleSubmit = () => {\n    // Call a function to submit the images here (e.g., onImagesSubmit(images))\n    onImagesSubmit(images);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number of Images:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        value: imageCount,\n        onChange: handleImageCountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image URL\",\n        value: image.url,\n        onChange: e => handleImageChange(index, e.target.value, 'url')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: image.title,\n        onChange: e => handleImageChange(index, e.target.value, 'title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: image.description,\n        onChange: e => handleImageChange(index, e.target.value, 'description')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"Nly1ew4FNHdjy1qDLvtUyIt6GOU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","onImagesSubmit","_s","imageCount","setImageCount","images","setImages","handleImageCountChange","e","count","parseInt","target","value","newImages","Array","from","length","_","index","url","title","description","handleImageChange","field","updatedImages","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","onChange","map","image","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/user/my-slideshow-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Form({ onImagesSubmit }) {\n  const [imageCount, setImageCount] = useState(0);\n  const [images, setImages] = useState([]);\n\n  const handleImageCountChange = (e) => {\n    const count = parseInt(e.target.value);\n    setImageCount(count);\n\n    // Initialize the images array with empty values\n    const newImages = Array.from({ length: count }, (_, index) => ({\n      url: '',\n      title: `Image ${index + 1}`,\n      description: '',\n    }));\n    setImages(newImages);\n  };\n\n  const handleImageChange = (index, value, field) => {\n    const updatedImages = [...images];\n    updatedImages[index][field] = value;\n    setImages(updatedImages);\n  };\n\n  const handleSubmit = () => {\n    // Call a function to submit the images here (e.g., onImagesSubmit(images))\n    onImagesSubmit(images);\n  };\n\n  return (\n    <div>\n      <h2>Image Form</h2>\n      <label>\n        Number of Images:\n        <input\n          type=\"number\"\n          min=\"0\"\n          value={imageCount}\n          onChange={handleImageCountChange}\n        />\n      </label>\n      {images.map((image, index) => (\n        <div key={index}>\n          <input\n            type=\"text\"\n            placeholder=\"Image URL\"\n            value={image.url}\n            onChange={(e) => handleImageChange(index, e.target.value, 'url')}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            value={image.title}\n            onChange={(e) => handleImageChange(index, e.target.value, 'title')}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            value={image.description}\n            onChange={(e) =>\n              handleImageChange(index, e.target.value, 'description')\n            }\n          />\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}