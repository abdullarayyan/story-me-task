{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-slideshow-app/src/ImageForm.js\";\nimport React, { Component } from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleImageUpload = e => {\n      const imageFile = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const newImage = {\n          image: reader.result,\n          title: this.state.title,\n          description: this.state.description\n        };\n        this.setState(prevState => ({\n          images: [...prevState.images, newImage],\n          number: \"\",\n          title: \"\",\n          description: \"\"\n        }));\n      };\n      reader.readAsDataURL(imageFile);\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      // You can submit the form data here if needed.\n    };\n    this.state = {\n      images: [],\n      currentImage: 0,\n      number: \"\",\n      title: \"\",\n      description: \"\"\n    };\n  }\n  render() {\n    const {\n      images,\n      currentImage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: \"Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"number\",\n          name: \"number\",\n          placeholder: \"Enter a number\",\n          value: this.state.number,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image Upload:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          accept: \"image/*\",\n          onChange: this.handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Enter the image title\",\n          value: this.state.title,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Enter a description (max 250 characters)\",\n          maxLength: \"250\",\n          value: this.state.description,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          selectedItem: currentImage,\n          onChange: index => this.setState({\n            currentImage: index\n          }),\n          showThumbs: false,\n          showStatus: false,\n          infiniteLoop: true,\n          children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.image,\n              alt: image.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: image.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ImageForm;","map":{"version":3,"names":["React","Component","Carousel","jsxDEV","_jsxDEV","ImageForm","constructor","props","handleInputChange","e","setState","target","name","value","handleImageUpload","imageFile","files","reader","FileReader","onload","newImage","image","result","title","state","description","prevState","images","number","readAsDataURL","handleSubmit","preventDefault","currentImage","render","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","accept","maxLength","length","selectedItem","index","showThumbs","showStatus","infiniteLoop","map","src","alt"],"sources":["/Users/user/my-slideshow-app/src/ImageForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\nclass ImageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      currentImage: 0,\n      number: \"\",\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleImageUpload = (e) => {\n    const imageFile = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const newImage = {\n        image: reader.result,\n        title: this.state.title,\n        description: this.state.description,\n      };\n\n      this.setState((prevState) => ({\n        images: [...prevState.images, newImage],\n        number: \"\",\n        title: \"\",\n        description: \"\"\n      }));\n    };\n\n    reader.readAsDataURL(imageFile);\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // You can submit the form data here if needed.\n  };\n\n  render() {\n    const { images, currentImage } = this.state;\n\n    return (\n      <div className=\"container\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"number\">Number:</label>\n          <input\n            type=\"number\"\n            id=\"number\"\n            name=\"number\"\n            placeholder=\"Enter a number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"image\">Image Upload:</label>\n          <input\n            type=\"file\"\n            id=\"image\"\n            accept=\"image/*\"\n            onChange={this.handleImageUpload}\n          />\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter the image title\"\n            value={this.state.title}\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Enter a description (max 250 characters)\"\n            maxLength=\"250\"\n            value={this.state.description}\n            onChange={this.handleInputChange}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n\n        {images.length > 0 && (\n          <div className=\"slider-container\">\n            <Carousel\n              selectedItem={currentImage}\n              onChange={(index) => this.setState({ currentImage: index })}\n              showThumbs={false}\n              showStatus={false}\n              infiniteLoop={true}\n            >\n              {images.map((image, index) => (\n                <div key={index}>\n                  <img src={image.image} alt={image.title} />\n                  <h3>{image.title}</h3>\n                  <p>{image.description}</p>\n                </div>\n              ))}\n            </Carousel>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}