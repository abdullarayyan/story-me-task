{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-slideshow-app/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Form.css'; // Import your CSS file\nimport Slideshow from './Slideshow'; // Import your Slideshow component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  onImagesSubmit\n}) {\n  _s();\n  const [imageCount, setImageCount] = useState(0);\n  const [images, setImages] = useState([]);\n  const handleAddImages = () => {\n    if (imageCount > 0) {\n      const newImages = Array.from({\n        length: imageCount\n      }, (_, index) => ({\n        url: '',\n        description: `Image ${index + 1}`\n      }));\n      setImages(newImages);\n    }\n  };\n  const handleSubmit = () => {\n    // Call a function to submit the images here (e.g., onImagesSubmit(images))\n    onImagesSubmit(images);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Size\",\n        value: size,\n        onChange: e => setSize(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number\",\n        value: number,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-inputs\",\n        children: Array.from({\n          length: number\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(Slideshow, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"Nly1ew4FNHdjy1qDLvtUyIt6GOU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Slideshow","jsxDEV","_jsxDEV","Form","onImagesSubmit","_s","imageCount","setImageCount","images","setImages","handleAddImages","newImages","Array","from","length","_","index","url","description","handleSubmit","className","children","onSubmit","type","placeholder","value","onChange","e","setDescription","target","fileName","_jsxFileName","lineNumber","columnNumber","size","setSize","number","handleNumberChange","map","accept","_c","$RefreshReg$"],"sources":["/Users/user/my-slideshow-app/src/Form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Form.css'; // Import your CSS file\nimport Slideshow from './Slideshow'; // Import your Slideshow component\n\nfunction Form({ onImagesSubmit }) {\n  const [imageCount, setImageCount] = useState(0);\n  const [images, setImages] = useState([]);\n\n  const handleAddImages = () => {\n    if (imageCount > 0) {\n      const newImages = Array.from({ length: imageCount }, (_, index) => ({\n        url: '',\n        description: `Image ${index + 1}`,\n      }));\n      setImages(newImages);\n    }\n  };\n\n  const handleSubmit = () => {\n    // Call a function to submit the images here (e.g., onImagesSubmit(images))\n    onImagesSubmit(images);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} />\n        <input type=\"text\" placeholder=\"Size\" value={size} onChange={(e) => setSize(e.target.value)} />\n        <input type=\"number\" placeholder=\"Number\" value={number} onChange={handleNumberChange} />\n\n        <div className=\"image-inputs\">\n          {Array.from({ length: number }).map((_, index) => (\n            <input key={index} type=\"file\" accept=\"image/*\" />\n          ))}\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {images.length > 0 && <Slideshow images={images} />}\n      {/* <Slideshow images={images} /> */}\n\n    </div>\n  );\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}