{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-slideshow-app/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled.div`\n  background-color: #f0f0f0;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  width: 300px;\n  margin: 0 auto;\n  text-align: center;\n`;\n_c = FormContainer;\nconst Title = styled.h2`\n  color: green;\n`;\n_c2 = Title;\nconst UploadButton = styled.button`\n  background-color: green;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n_c3 = UploadButton;\nfunction Form({\n  onSubmit\n}) {\n  _s();\n  const [images, setImages] = useState([]);\n  const [showSlider, setShowSlider] = useState(false);\n  const onDrop = acceptedFiles => {\n    // Process the uploaded files and add them to the 'images' state\n    const newImages = acceptedFiles.map(file => ({\n      url: URL.createObjectURL(file),\n      title: `Image ${images.length + 1}`,\n      description: `Description for Image ${images.length + 1}`\n    }));\n    setImages([...images, ...newImages]);\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*' // Allow only image file uploads\n  });\n\n  const handleSubmit = () => {\n    onSubmit(images.length);\n    setShowSlider(true);\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & drop or click here to upload images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"TNQYyBn/bO2AQwImcgvK0btMDY4=\", false, function () {\n  return [useDropzone];\n});\n_c4 = Form;\nexport default Form;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"UploadButton\");\n$RefreshReg$(_c4, \"Form\");","map":{"version":3,"names":["React","useState","useDropzone","styled","jsxDEV","_jsxDEV","FormContainer","div","_c","Title","h2","_c2","UploadButton","button","_c3","Form","onSubmit","_s","images","setImages","showSlider","setShowSlider","onDrop","acceptedFiles","newImages","map","file","url","URL","createObjectURL","title","length","description","getRootProps","getInputProps","accept","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/Users/user/my-slideshow-app/src/Form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: #f0f0f0;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  width: 300px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst Title = styled.h2`\n  color: green;\n`;\n\nconst UploadButton = styled.button`\n  background-color: green;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nfunction Form({ onSubmit }) {\n  const [images, setImages] = useState([]);\n  const [showSlider, setShowSlider] = useState(false);\n\n  const onDrop = (acceptedFiles) => {\n    // Process the uploaded files and add them to the 'images' state\n    const newImages = acceptedFiles.map((file) => ({\n      url: URL.createObjectURL(file),\n      title: `Image ${images.length + 1}`,\n      description: `Description for Image ${images.length + 1}`,\n    }));\n    setImages([...images, ...newImages]);\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'image/*', // Allow only image file uploads\n  });\n\n  const handleSubmit = () => {\n    onSubmit(images.length);\n    setShowSlider(true);\n  };\n\n  return (\n    <FormContainer>\n      <Title>Form</Title>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        <p>Drag & drop or click here to upload images</p>\n      </div>\n      <UploadButton onClick={handleSubmit}>Submit</UploadButton>\n    </FormContainer>\n  );\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}