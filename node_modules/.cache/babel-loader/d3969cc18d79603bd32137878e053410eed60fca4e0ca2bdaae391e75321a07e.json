{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-slideshow-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageCount, setImageCount] = useState(1);\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const handleImageCountChange = event => {\n    const count = parseInt(event.target.value, 10);\n    setImageCount(count);\n  };\n  const handleImageUpload = (event, index) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const updatedImages = [...images];\n      updatedImages[index] = {\n        ...updatedImages[index],\n        image: e.target.result\n      };\n      setImages(updatedImages);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleTitleChange = (event, index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = {\n      ...updatedImages[index],\n      title: event.target.value\n    };\n    setImages(updatedImages);\n  };\n  const handleDescriptionChange = (event, index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = {\n      ...updatedImages[index],\n      description: event.target.value\n    };\n    setImages(updatedImages);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // You can use the 'images' state to display or save the images with titles and descriptions.\n  };\n\n  const goToSlide = index => {\n    setCurrentIndex(index);\n  };\n  const renderSlider = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slide ${index === currentIndex ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: image.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.image,\n            alt: image.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots\",\n        children: images.map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `dot ${index === currentIndex ? 'active' : ''}`,\n          onClick: () => goToSlide(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageCount\",\n          children: \"Number of Images to Upload:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"imageCount\",\n          name: \"imageCount\",\n          min: \"1\",\n          value: imageCount,\n          onChange: handleImageCountChange,\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"imageInputs\",\n          children: Array.from({\n            length: imageCount\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `title${index}`,\n              children: \"Image Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `title${index}`,\n              name: `title${index}`,\n              className: \"form-input\",\n              onChange: event => handleTitleChange(event, index),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `description${index}`,\n              children: \"Image Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `description${index}`,\n              name: `description${index}`,\n              className: \"form-input\",\n              onChange: event => handleDescriptionChange(event, index),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `image${index}`,\n              children: \"Upload Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: `image${index}`,\n              name: `image${index}`,\n              accept: \"image/*\",\n              className: \"form-input\",\n              onChange: event => handleImageUpload(event, index),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), images.length > 0 && renderSlider()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KXNc5EaRGWUlk9ueZPuXqJYt2lQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","imageCount","setImageCount","images","setImages","currentIndex","setCurrentIndex","handleImageCountChange","event","count","parseInt","target","value","handleImageUpload","index","file","files","reader","FileReader","onload","e","updatedImages","image","result","readAsDataURL","handleTitleChange","title","handleDescriptionChange","description","handleSubmit","preventDefault","goToSlide","renderSlider","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_","onClick","onSubmit","htmlFor","type","id","name","min","onChange","required","Array","from","length","accept","_c","$RefreshReg$"],"sources":["/Users/user/my-slideshow-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [imageCount, setImageCount] = useState(1);\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const handleImageCountChange = (event) => {\n    const count = parseInt(event.target.value, 10);\n    setImageCount(count);\n  };\n\n  const handleImageUpload = (event, index) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const updatedImages = [...images];\n      updatedImages[index] = {\n        ...updatedImages[index],\n        image: e.target.result,\n      };\n      setImages(updatedImages);\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleTitleChange = (event, index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = {\n      ...updatedImages[index],\n      title: event.target.value,\n    };\n    setImages(updatedImages);\n  };\n\n  const handleDescriptionChange = (event, index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = {\n      ...updatedImages[index],\n      description: event.target.value,\n    };\n    setImages(updatedImages);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // You can use the 'images' state to display or save the images with titles and descriptions.\n  };\n\n  const goToSlide = (index) => {\n    setCurrentIndex(index);\n  };\n\n  const renderSlider = () => {\n    return (\n      <div className=\"slider-container\">\n        <div className=\"slider\">\n          {images.map((image, index) => (\n            <div key={index} className={`slide ${index === currentIndex ? 'active' : ''}`}>\n              <h2>{image.title}</h2>\n              <p>{image.description}</p>\n              <img src={image.image} alt={image.title} />\n            </div>\n          ))}\n        </div>\n        <div className=\"dots\">\n          {images.map((_, index) => (\n            <span\n              key={index}\n              className={`dot ${index === currentIndex ? 'active' : ''}`}\n              onClick={() => goToSlide(index)}\n            ></span>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"imageCount\">Number of Images to Upload:</label>\n          <input\n            type=\"number\"\n            id=\"imageCount\"\n            name=\"imageCount\"\n            min=\"1\"\n            value={imageCount}\n            onChange={handleImageCountChange}\n            required\n            className=\"form-input\"\n          />\n          <div id=\"imageInputs\">\n            {Array.from({ length: imageCount }, (_, index) => (\n              <div key={index}>\n                <label htmlFor={`title${index}`}>Image Title:</label>\n                <input\n                  type=\"text\"\n                  id={`title${index}`}\n                  name={`title${index}`}\n                  className=\"form-input\"\n                  onChange={(event) => handleTitleChange(event, index)}\n                  required\n                />\n                <label htmlFor={`description${index}`}>Image Description:</label>\n                <input\n                  type=\"text\"\n                  id={`description${index}`}\n                  name={`description${index}`}\n                  className=\"form-input\"\n                  onChange={(event) => handleDescriptionChange(event, index)}\n                  required\n                />\n                <label htmlFor={`image${index}`}>Upload Image:</label>\n                <input\n                  type=\"file\"\n                  id={`image${index}`}\n                  name={`image${index}`}\n                  accept=\"image/*\"\n                  className=\"form-input\"\n                  onChange={(event) => handleImageUpload(event, index)}\n                  required\n                />\n              </div>\n            ))}\n          </div>\n          <button type=\"submit\" className=\"form-button\">\n            Submit\n          </button>\n        </form>\n      </div>\n      {images.length > 0 && renderSlider()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}