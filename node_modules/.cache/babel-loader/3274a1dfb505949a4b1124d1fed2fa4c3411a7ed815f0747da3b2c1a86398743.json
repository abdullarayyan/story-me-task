{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-slideshow-app/src/ImageForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageForm({\n  onImageUpload,\n  title,\n  description,\n  setTitle,\n  setDescription,\n  handleSubmit\n}) {\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const imageData = {\n          src: e.target.result,\n          title,\n          description\n        };\n        onImageUpload(imageData); // Pass the image data to the parent component\n        setTitle(''); // Clear the title field\n        setDescription(''); // Clear the description field\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = ImageForm;\nexport default ImageForm;\nvar _c;\n$RefreshReg$(_c, \"ImageForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImageForm","onImageUpload","title","description","setTitle","setDescription","handleSubmit","handleImageUpload","e","file","target","files","reader","FileReader","onload","imageData","src","result","readAsDataURL","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","_c","$RefreshReg$"],"sources":["/Users/user/my-slideshow-app/src/ImageForm.js"],"sourcesContent":["import React from 'react';\n\nfunction ImageForm({\n  onImageUpload,\n  title,\n  description,\n  setTitle,\n  setDescription,\n  handleSubmit,\n}) {\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const imageData = {\n          src: e.target.result,\n          title,\n          description,\n        };\n        onImageUpload(imageData); // Pass the image data to the parent component\n        setTitle(''); // Clear the title field\n        setDescription(''); // Clear the description field\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" onChange={handleImageUpload} />\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ImageForm;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EACjBC,aAAa;EACbC,KAAK;EACLC,WAAW;EACXC,QAAQ;EACRC,cAAc;EACdC;AACF,CAAC,EAAE;EACD,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIN,CAAC,IAAK;QACrB,MAAMO,SAAS,GAAG;UAChBC,GAAG,EAAER,CAAC,CAACE,MAAM,CAACO,MAAM;UACpBf,KAAK;UACLC;QACF,CAAC;QACDF,aAAa,CAACc,SAAS,CAAC,CAAC,CAAC;QAC1BX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACdC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;MACtB,CAAC;;MACDO,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,oBACEV,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAMqB,QAAQ,EAAEd,YAAa;MAAAa,QAAA,gBAC3BpB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEf;MAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD3B,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXM,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE1B,KAAM;QACboB,QAAQ,EAAGd,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACE,MAAM,CAACkB,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACF3B,OAAA;QACE4B,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEzB,WAAY;QACnBmB,QAAQ,EAAGd,CAAC,IAAKH,cAAc,CAACG,CAAC,CAACE,MAAM,CAACkB,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF3B,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACG,EAAA,GA7CQ7B,SAAS;AA+ClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}